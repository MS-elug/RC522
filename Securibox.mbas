#DEFINE DEBUG_TO_UART_MODE

program Securibox

'*******************************************************************************
'
'   PIC 18F45K22
'   Quartz 16 MHz + PLL X4  => 64.0000 MHz
'
'*******************************************************************************
'
'   Simulateur d'un encodeur moteur en fonction d'une tension de commande -10V / +10V
'
'*******************************************************************************
'
'   Date de revision :  06/05/2018
'
' ******************************************************************************

include RC522

sub procedure initMain()
   TRISA = 0x00                   ' A en sortie
   TRISB = 0x00                   ' B en sortie
   TRISC = %00010000                   ' C en sortie

   PORTA = 0x00                   ' initialize Port A
   PORTB = 0x00                   ' initialize Port B
   PORTC = 0x00 '%00000000                   ' initialize Port C

   TRISE = 0x00
   PORTE = 0x00                                     ' initialize port E

   ' -----------------------------------------------------------
   ' Use 16Mhz externql clock with PLL4x to get 64Mhz clock
   OSCCON.SCS1 = 0                    ' System clock set to primary clock
   OSCCON.SCS0 = 0

   ' -----------------------------------------------------------
   ' Initialize A/D module
   ANSELA = 0x00
   ANSELB = 0x00                      ' aucune entr?e analogique en B
   ANSELC = 0x00                      ' aucune entr?e analogique en C
   
   CM1CON0.7=0                                   ' comparateurs arr?t?s
   CM2CON0.7=0                                   ' comparateurs arr?t?s

  'RC522_SS_PIN = 1
  'RC522_RST_PIN = 0
  
  #IFDEF DEBUG_TO_UART_MODE THEN 'Initialize UART
      UART1_Init(9600)
  #ENDIF
  
  ' MFRC522 accept upto 10MHz
  SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV64, _SPI_DATA_SAMPLE_MIDDLE, _SPI_CLK_IDLE_LOW, _SPI_LOW_2_HIGH) ' Initialize SPI1 module
  PCD_Init()
  


end sub

 
main:
  dim i as word
  #IFDEF DEBUG_TO_UART_MODE THEN
  dim txt as string[2]
  #ENDIF

  initMain()
  while(true)
    delay_ms(500)

    if(not PICC_IsNewCardPresent()) then
      #IFDEF DEBUG_TO_UART_MODE THEN
             UART1_Write_Text("Card not found")
             UART1_Write(0x0A)
      #ENDIF
      LATC.1 = 0
      continue
    end if
    
    #IFDEF DEBUG_TO_UART_MODE THEN
      UART1_Write_Text("Card found - Reading uid")
      UART1_Write(0x0A)
    #ENDIF
    LATC.1 = 1
    
    if(not PICC_ReadCardSerial()) then
      #IFDEF DEBUG_TO_UART_MODE THEN
             UART1_Write_Text("Cannot read the card")
             UART1_Write(0x0A)
      #ENDIF
      LATC.1 = 0
      continue
    end if

    #IFDEF DEBUG_TO_UART_MODE THEN
    UART1_Write_Text("UID card is ")
    for i=0 to uid.size - 1
      ByteToHex(uid.uidByte[i], txt)
      UART1_Write_Text(txt)
      UART1_Write_Text(" ")
    next i
    UART1_Write(0x0A)
    #ENDIF
  wend
  
end.